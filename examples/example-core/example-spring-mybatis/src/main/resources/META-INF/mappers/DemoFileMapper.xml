<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one or more
  ~ contributor license agreements.  See the NOTICE file distributed with
  ~ this work for additional information regarding copyright ownership.
  ~ The ASF licenses this file to You under the Apache License, Version 2.0
  ~ (the "License"); you may not use this file except in compliance with
  ~ the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.shardingsphere.example.core.mybatis.repository.MybatisDemoFileMapper">
    <resultMap id="baseResultMap" type="org.apache.shardingsphere.example.core.api.entity.DemoFile">
        <result column="id" property="id" jdbcType="BIGINT"/>
        <result column="file_key" property="fileKey" jdbcType="VARCHAR" />
        <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <update id="createTableIfNotExists">
        CREATE TABLE IF NOT EXISTS demo_file (
             id bigint(20) NOT NULL,
             file_key varchar(200) ,
             file_url varchar(500) ,
             type int(10) NOT NULL ,
             create_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP ,
             PRIMARY KEY (id),
             UNIQUE KEY uq_key (file_key) USING BTREE
        ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
    </update>

    <update id="truncateTable">
        TRUNCATE TABLE demo_file;
    </update>

    <update id="dropTable">
        DROP TABLE IF EXISTS demo_file;
    </update>

    <insert id="insert">
        INSERT INTO demo_file (file_key, file_url, type, create_time)
        VALUES (#{fileKey,jdbcType=VARCHAR}, #{fileUrl,jdbcType=VARCHAR}, #{type}, #{createTime});
    </insert>

    <delete id="delete">
        DELETE FROM demo_file WHERE id = #{id,jdbcType=BIGINT};
    </delete>
    <delete id="deleteByFileKey">
        DELETE FROM demo_file WHERE file_key = #{fileKey};
    </delete>
    <select id="selectAll" resultMap="baseResultMap">
        SELECT * FROM demo_file;
    </select>

    <select id="selectByFileKey" resultMap="baseResultMap">
        select * from demo_file where file_key = #{fileKey}
    </select>

    <select id="selectByFileKeys" resultMap="baseResultMap">
        select * from demo_file where file_key
        in
        <foreach close=")" collection="list" item="key" open="(" separator=",">
            #{key}
        </foreach>
    </select>
</mapper>
